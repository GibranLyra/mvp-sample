apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    }
}

// Required because retrolambda is on maven central
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'scala-asm.properties'
    }
}

ext {
    retrofitVersion = '2.3.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    //Retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    //Ok Http
    compile "com.squareup.okhttp3:logging-interceptor:3.8.0"
    //RX
    compile "io.reactivex.rxjava2:rxjava:2.1.0"
    //Timber
    compile 'com.jakewharton.timber:timber:4.5.1'
    // JodaTime
    compile 'net.danlew:android.joda:2.9.5'
    //Timezone
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'
}

String java7 = getJavaVersion(7)
String java8 = getJavaVersion(8)

retrolambda {
    jdk java8
    oldJdk java7
    javaVersion JavaVersion.VERSION_1_7
    defaultMethods false
    incremental true
}

String getJavaVersion(Integer v) {
    def envVar = v == 7 ? System.getenv("JAVA_HOME") : System.getenv("JAVA8_HOME")
    if (envVar != null && envVar.trim() != "") {
        return envVar
    }
    def sout = new StringBuffer()
    def proc = "/usr/libexec/java_home -v 1.$v".execute()
    proc.consumeProcessOutput(sout, new StringBuffer())
    proc.waitForOrKill(1000)
    def javaHome = sout.toString().replace("\n", "").replace("\r", "")
    return javaHome
}
